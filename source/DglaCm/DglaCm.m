(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["FormalityTools`DglaCm`",{"FormalityTools`Helpers`"}];


SetupDgla::usage="Set up the dgla associated with the critical locus of the input function.";
CleanDgla::usage="Clean up the dgla.";
Dgla::usage="Returns the dgla associated with the critical locus of the input function. Currently will override previous SetupDgla";
d::usage="The differential";
c::usage="The graded Lie bracket";
basis::usage="The basis of the complex.";


Begin["`Private`"];


SetupDgla[fin_]:=Module[{},
CleanDgla[];
f=fin;
vars=Variables[f];
varsMat=Transpose[{vars}];
dd=D[#,{vars}]&;
evalAtOrigin=#/.Table[x->0,{x,vars}]&;
nonzeroDegrees={1,2};
]


CleanDgla[]:=Module[{},
ClearCache/@Unevaluated/@Unevaluated[{f,vars,varsMat,dd,evalAtOrigin,nonzeroDegrees,c,d}];
]


Dgla[fin_]:=Module[{result},
SetupDgla[fin];
result={
Table[{i,d[i]},{i,Select[nonzeroDegrees,MemberQ[nonzeroDegrees,#+1]&]}],Table[With[{i=\[Alpha][[1]],j=\[Alpha][[2]]},{{i,j},c[i,j]}],{\[Alpha],Select[Flatten[Outer[List,nonzeroDegrees,nonzeroDegrees],1],MemberQ[nonzeroDegrees,Plus@@#]&]}]
};
CleanDgla[];
result
]


basis:=vars


d[i_]:=d[i]=SparseArray@evalAtOrigin@dd@dd[f]


c[i_,j_]:=c[i,j]=SparseArray@evalAtOrigin@dd@dd@dd[f]


End[];
EndPackage[];
