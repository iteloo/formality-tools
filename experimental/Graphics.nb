(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     74172,       1618]
NotebookOptionsPosition[     71930,       1534]
NotebookOutlinePosition[     72327,       1551]
CellTagsIndexPosition[     72284,       1548]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Graphics Package", "Title",
 CellChangeTimes->{{3.60771703038519*^9, 3.607717056413872*^9}}],

Cell[CellGroupData[{

Cell["Setup", "Section",
 CellChangeTimes->{{3.607477935514412*^9, 3.607477936264089*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
   RowBox[{"Background", "\[Rule]", "LightGreen"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.607280241644849*^9, 3.607280245353715*^9}, 
   3.607326911981049*^9, 3.607439803292239*^9, {3.607470548504765*^9, 
   3.607470548736195*^9}, 3.607474101275629*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Begin Package", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.607478036111341*^9, 3.607478037477685*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<FormalityTools`Graphics`\>\"", ",", 
    RowBox[{"{", "\"\<FormalityTools`SmartTensor`\>\"", "}"}]}], "]"}], 
  ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.598829475229063*^9, 3.598829478261488*^9}, 
   3.598831440104094*^9, {3.598831952187162*^9, 3.5988319644094954`*^9}, {
   3.598833274616651*^9, 3.598833293695784*^9}, {3.598905347051097*^9, 
   3.598905355750904*^9}, {3.5989054307688217`*^9, 3.598905437638081*^9}, {
   3.599854626767277*^9, 3.599854628244357*^9}, {3.6074698850605516`*^9, 
   3.6074698936124563`*^9}, {3.607477961211895*^9, 3.60747798572946*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PartitionQ", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"box", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"map", "::", "usage"}], "=", "\"\<\>\""}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.6074700527942247`*^9, 3.607470065664472*^9}, 
   3.607472003090768*^9, {3.6074723518614063`*^9, 3.6074723601593037`*^9}, {
   3.6074780712880898`*^9, 3.607478083777009*^9}, {3.6074800953763847`*^9, 
   3.6074801031892853`*^9}, {3.607480745713372*^9, 3.6074807542852583`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.598829499388723*^9, 3.598829508019981*^9}, 
   3.598833295974461*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Core", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.6074779380720987`*^9, 3.607477938399597*^9}}],

Cell[CellGroupData[{

Cell["Partition", "Subsection",
 CellChangeTimes->{{3.607480110280188*^9, 3.607480110995154*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"map", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "]"}], "^:=", 
  RowBox[{"Interpretation", "[", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "b"}], ",", 
    RowBox[{"map", "[", 
     RowBox[{"a", ",", "b"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{"box", "[", "coord__", "]"}], "]"}], "^:=", 
  RowBox[{"Interpretation", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "coord", "}"}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"ItemSize", "\[Rule]", ".1"}]}], "]"}], ",", 
    RowBox[{"box", "[", "coord", "]"}]}], "]"}]}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607326665010124*^9, 3.607326699059329*^9}, 
   3.6073269119835978`*^9, {3.607329308232649*^9, 3.607329325344409*^9}, {
   3.607374643093753*^9, 3.607374643206317*^9}, {3.6073752033313*^9, 
   3.607375205247327*^9}, {3.607385692171487*^9, 3.6073857099233637`*^9}, 
   3.607439803294034*^9, 3.607474101279171*^9, {3.607480144205208*^9, 
   3.60748014503395*^9}, {3.607480297173428*^9, 3.607480298011327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PartitionQ", "[", "expr_", "]"}], ":=", 
  RowBox[{"ArrayQ", "[", 
   RowBox[{"expr", ",", "1", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Head", "[", "#", "]"}], "===", "box"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.607480123646494*^9, 3.6074801714637213`*^9}, {
  3.607480390579619*^9, 3.607480394431826*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["L", "Subsection",
 CellChangeTimes->{{3.6074801142674*^9, 3.6074801206191263`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Format", "[", 
   RowBox[{
    RowBox[{"X", "[", 
     RowBox[{"m_", "/;", 
      RowBox[{"SmartTensorQ", "[", 
       RowBox[{"m", ",", "2", ",", "NumberQ"}], "]"}]}], "]"}], ",", 
    "StandardForm"}], "]"}], "^:=", 
  RowBox[{"Interpretation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mat", "=", "m"}], ",", 
      RowBox[{"fancyGraphics", "=", "False"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"down", "=", "Null"}], ",", "boxColor", ",", 
        RowBox[{"\[Mu]", "=", 
         RowBox[{"First", "@", 
          RowBox[{"Part", "[", 
           RowBox[{"mat", ",", "2"}], "]"}]}]}], ",", 
        RowBox[{"op", "=", ".3"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"boxColor", "[", "b_", "]"}], ":=", 
        RowBox[{"RGBColor", "@@", 
         RowBox[{"(", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", "/.", 
              RowBox[{"box", "\[Rule]", "List"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"Max", "/@", 
              RowBox[{"Transpose", "@", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "/.", 
                 RowBox[{
                  RowBox[{"box", "[", "r__", "]"}], "\[RuleDelayed]", 
                  RowBox[{
                   RowBox[{"{", "r", "}"}], "+", ".01"}]}]}], ")"}]}]}], 
             ")"}]}], "]"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Panel", "@", 
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"OpenerView", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"\"\<Graphics\>\"", ",", "\[IndentingNewLine]", 
               RowBox[{"Column", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Dynamic", "@", 
                   RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Join", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"b", "=", 
                    RowBox[{"a", "/.", 
                    RowBox[{"box", "\[Rule]", "List"}]}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"EventHandler", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Annotation", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"fancyGraphics", ",", "\[IndentingNewLine]", 
                    RowBox[{"Mouseover", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "#", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", "Gray", "]"}], ",", " ", 
                    RowBox[{"boxColor", "[", "a", "]"}], ",", 
                    RowBox[{"Cuboid", "[", "b", "]"}]}], "}"}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"op", ",", ".5"}], "}"}]}], ")"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", "Gray", "]"}], ",", 
                    "Transparent", ",", 
                    RowBox[{"Cuboid", "[", "b", "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    "a", ",", "\"\<Mouse\>\""}], "\[IndentingNewLine]", "]"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", 
                    RowBox[{"down", "=", 
                    RowBox[{"MouseAnnotation", "[", "]"}]}], ")"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<MouseUp\>\"", "\[RuleDelayed]", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MouseAnnotation", "[", "]"}], "=!=", "Null"}], "&&", 
                    RowBox[{"down", "=!=", "Null"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"mat", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"mat", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "##"}], "}"}], "\[RuleDelayed]", 
                    RowBox[{"Boole", "[", 
                    RowBox[{
                    RowBox[{"mat", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "##"}], "]"}], "]"}], "\[Equal]", "0"}],
                     "]"}]}]}], "]"}], "&"}], "@@", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MouseAnnotation", "[", "]"}], "\[CircleTimes]", 
                    "down"}], ",", "mat"}], "]"}]}]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"down", "=", "Null"}], ";"}], 
                    "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]", 
                    "}"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "\[Mu]"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"down", "=!=", "Null"}], "&&", 
                    RowBox[{
                    RowBox[{"MouseAnnotation", "[", "]"}], "=!=", "Null"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
                    "\[IndentingNewLine]", "Thick", ",", 
                    "\[IndentingNewLine]", "Black", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"down", ",", 
                    RowBox[{"MouseAnnotation", "[", "]"}]}], "}"}], "/.", 
                    RowBox[{"box", "\[Rule]", "List"}]}], ")"}], "+", ".5"}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], 
                    "\[IndentingNewLine]", "~", "Join", "~", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Arrowheads", "[", ".1", "]"}], ",", "Thick", ",",
                     "Black", ",", "\[IndentingNewLine]", 
                    RowBox[{"Tooltip", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"SameQ", "@@", "#2"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"BezierCurve", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", "x", "}"}], ",", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "+", "x"}]}], "]"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", ".5", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{".5", ",", "0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Arrow", "[", "#2", "]"}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                    "#1"}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "&"}], "@@@", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Pair", "[", "mat", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"First", "[", "#", "]"}], "\[NotEqual]", "0"}], 
                    "&"}]}], "]"}], "/.", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"box", "[", "h__", "]"}], "\[CircleTimes]", 
                    RowBox[{"box", "[", "r__", "]"}]}], "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "r", "}"}], "+", ".5"}], ",", 
                    RowBox[{
                    RowBox[{"{", "h", "}"}], "+", ".5"}]}], "}"}]}]}], 
                    ")"}]}], "\[IndentingNewLine]", ")"}]}], 
                    "\[IndentingNewLine]", ")"}], "/.", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"fancyGraphics", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Black", "\[Rule]", "Yellow"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Arrow", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Arrow", "@", 
                    RowBox[{"Tube", "[", 
                    RowBox[{"#", ",", ".03"}], "]"}]}], "&"}], " ", ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"BezierCurve", "\[RuleDelayed]", 
                    RowBox[{"Composition", "[", 
                    RowBox[{"Tube", ",", "BezierCurve"}], "]"}]}]}], "}"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"ViewPoint", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", ".6", ",", ".7"}], "}"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"PreserveImageOptions", "\[Rule]", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<Fancy graphics: \>\"", ",", 
                    RowBox[{"Checkbox", "[", 
                    RowBox[{"Dynamic", "[", "fancyGraphics", "]"}], "]"}]}], 
                    "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "True"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"OpenerView", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"\"\<Data\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"InputField", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TableForm", "[", 
                   RowBox[{
                    RowBox[{"Forget", "[", "mat", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TableHeadings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", "#"}], "}"}]}], "&"}], "@", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Opacity", "[", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"MouseAnnotation", "[", "]"}], "=!=", "#"}], 
                    "]"}], ",", "op", ",", "1"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"EdgeForm", "[", "Transparent", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"boxColor", "[", "#", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Rectangle", "[", "]"}]}], "\[IndentingNewLine]", 
                    "}"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"ImageSize", "\[Rule]", "12"}]}], 
                    "\[IndentingNewLine]", "]"}], "&"}], "/@", "\[Mu]"}], 
                    ")"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{"#", ",", "NumberQ"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"mat", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "=", "#"}]}], "]"}], 
                    ")"}], "&"}]}], "\[IndentingNewLine]", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"ContinuousAction", "\[Rule]", "True"}]}], 
               "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
            "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"X", "[", "mat", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 InitializationGroup->True,
 CellChangeTimes->{{3.607309510735149*^9, 3.607309515243606*^9}, {
   3.607309609458006*^9, 3.6073096324094553`*^9}, {3.607309677789463*^9, 
   3.6073097769654922`*^9}, {3.607311258788104*^9, 3.607311364623766*^9}, {
   3.6073162024187937`*^9, 3.60731621393585*^9}, {3.607316362125362*^9, 
   3.607316390690153*^9}, {3.607316427365264*^9, 3.6073165584080267`*^9}, {
   3.6073165898673763`*^9, 3.6073167057650003`*^9}, {3.607316813219475*^9, 
   3.6073168422930603`*^9}, {3.6073169487803288`*^9, 3.607317092793071*^9}, {
   3.607317151082074*^9, 3.6073171520580893`*^9}, {3.607317199033168*^9, 
   3.607317210213539*^9}, {3.607317243272332*^9, 3.6073172744492273`*^9}, {
   3.607317368816103*^9, 3.607317379817523*^9}, {3.607317439376616*^9, 
   3.607317492558222*^9}, {3.607317544232215*^9, 3.607317578911995*^9}, {
   3.6073212492342377`*^9, 3.607321253326872*^9}, {3.607321318776732*^9, 
   3.607321334619293*^9}, {3.607322556540348*^9, 3.60732255888033*^9}, {
   3.607322603105782*^9, 3.607322611295689*^9}, {3.607322647979974*^9, 
   3.607322792023301*^9}, {3.607322833952485*^9, 3.607322844148835*^9}, {
   3.607322904383071*^9, 3.607322910988226*^9}, {3.607323348504456*^9, 
   3.607323508865131*^9}, {3.607324258900072*^9, 3.607324335791449*^9}, {
   3.6073243815186663`*^9, 3.6073244530134277`*^9}, 3.6073244895857363`*^9, {
   3.607324533386094*^9, 3.60732454453624*^9}, {3.607324582254197*^9, 
   3.607324619868403*^9}, {3.607324652227705*^9, 3.607324674310931*^9}, {
   3.6073247134055033`*^9, 3.607324873034234*^9}, {3.607324914638685*^9, 
   3.60732499849611*^9}, {3.607325070096909*^9, 3.607325071687192*^9}, {
   3.6073253204193773`*^9, 3.607325320912973*^9}, {3.607325412870777*^9, 
   3.607325416757359*^9}, {3.6073255967657337`*^9, 3.6073256313974752`*^9}, {
   3.6073256915439672`*^9, 3.6073256918972692`*^9}, {3.607325726815737*^9, 
   3.6073257573176737`*^9}, {3.6073258332936583`*^9, 
   3.6073259603713617`*^9}, {3.607326014594646*^9, 3.607326030756939*^9}, 
   3.607326066129862*^9, {3.607326136103016*^9, 3.6073262320675697`*^9}, {
   3.60732628475729*^9, 3.607326342570466*^9}, {3.607326375140881*^9, 
   3.60732665845949*^9}, {3.607326780694685*^9, 3.6073269169717503`*^9}, {
   3.607327003288188*^9, 3.607327007595701*^9}, {3.607327087416389*^9, 
   3.607327088368425*^9}, {3.607327127998946*^9, 3.607327139825989*^9}, {
   3.607327263269754*^9, 3.607327331229101*^9}, 3.6073276745678387`*^9, {
   3.607329342807993*^9, 3.607329342904257*^9}, {3.6073293994746037`*^9, 
   3.607329417600078*^9}, {3.6073295446327744`*^9, 3.6073295810698547`*^9}, {
   3.607329837492359*^9, 3.6073298383955727`*^9}, {3.6073614884713097`*^9, 
   3.607361489224909*^9}, {3.6073615714611273`*^9, 3.607361637573085*^9}, {
   3.607371286988777*^9, 3.60737138182471*^9}, {3.6073714169264708`*^9, 
   3.60737146598841*^9}, {3.607371506894102*^9, 3.60737151916269*^9}, {
   3.6073717354060917`*^9, 3.6073717371994658`*^9}, {3.607371819619319*^9, 
   3.607371819896513*^9}, {3.607371853325304*^9, 3.6073718567720337`*^9}, {
   3.607371916982436*^9, 3.607371932309465*^9}, {3.6073720548442287`*^9, 
   3.607372059508931*^9}, {3.6073722075069637`*^9, 3.607372229998745*^9}, 
   3.6073722600017347`*^9, {3.607373407342556*^9, 3.607373409160367*^9}, {
   3.607373756191679*^9, 3.6073738755906878`*^9}, {3.607374689286437*^9, 
   3.607374698425932*^9}, {3.607374763183299*^9, 3.607374785714222*^9}, {
   3.607374821337631*^9, 3.60737482827866*^9}, 3.607374960234042*^9, {
   3.6073751290958223`*^9, 3.6073751311679583`*^9}, {3.607375264549712*^9, 
   3.607375336939727*^9}, {3.6073753738769073`*^9, 3.607375652105397*^9}, {
   3.607375706197133*^9, 3.6073757186066933`*^9}, {3.60737576320387*^9, 
   3.607375775263645*^9}, {3.6073758211363087`*^9, 3.607375861626348*^9}, {
   3.6073759119740353`*^9, 3.607375915438799*^9}, {3.607376337508271*^9, 
   3.607376344939678*^9}, {3.607376389812153*^9, 3.607376398770589*^9}, {
   3.607376599075837*^9, 3.6073766079401493`*^9}, {3.6073766697000504`*^9, 
   3.607376674809792*^9}, {3.607376954867632*^9, 3.607377012163818*^9}, {
   3.60737713613523*^9, 3.607377162492429*^9}, {3.607377256255794*^9, 
   3.607377261385118*^9}, {3.607377349316392*^9, 3.607377395051001*^9}, {
   3.607377433208494*^9, 3.607377438723653*^9}, {3.607377525173375*^9, 
   3.607377527734694*^9}, {3.6073779365609093`*^9, 3.607377993000733*^9}, {
   3.607378024708359*^9, 3.607378030069537*^9}, {3.607379082686661*^9, 
   3.607379086374344*^9}, {3.607379468165803*^9, 3.607379483187738*^9}, {
   3.607380145580346*^9, 3.607380152718172*^9}, {3.6073858376218977`*^9, 
   3.607385955028118*^9}, {3.607386495266197*^9, 3.607386498025835*^9}, {
   3.60738652990392*^9, 3.607386562028533*^9}, {3.607386661747964*^9, 
   3.6073867192314157`*^9}, {3.6073867838398857`*^9, 3.607386830190196*^9}, {
   3.607386864446857*^9, 3.607387005979985*^9}, {3.607387180883514*^9, 
   3.607387208490679*^9}, {3.607387367615038*^9, 3.607387368803302*^9}, {
   3.607388371239235*^9, 3.607388387422523*^9}, {3.607388559744618*^9, 
   3.6073885876972446`*^9}, {3.607388997953363*^9, 3.607389021884388*^9}, {
   3.6073890901514997`*^9, 3.6073891407181997`*^9}, {3.6073891995022917`*^9, 
   3.607389224589432*^9}, {3.6073893472268248`*^9, 3.6073894476194563`*^9}, {
   3.607389511155217*^9, 3.6073895138238497`*^9}, {3.607389634758729*^9, 
   3.6073896602084093`*^9}, {3.607390303983974*^9, 3.607390372381967*^9}, {
   3.607391084778366*^9, 3.607391132788888*^9}, {3.6073916495293493`*^9, 
   3.607391661874481*^9}, {3.607397697365655*^9, 3.607397719570866*^9}, {
   3.607397788964498*^9, 3.6073979163671703`*^9}, {3.607400325689412*^9, 
   3.607400368113405*^9}, {3.607400486257463*^9, 3.6074005676729507`*^9}, {
   3.6074007047138767`*^9, 3.607400787656838*^9}, {3.607401096589779*^9, 
   3.6074010993961353`*^9}, {3.607401159081568*^9, 3.607401194397835*^9}, {
   3.607439018009057*^9, 3.607439024777422*^9}, {3.607439079168336*^9, 
   3.607439089322596*^9}, {3.607439145154746*^9, 3.607439184536292*^9}, {
   3.6074392578261747`*^9, 3.607439318203999*^9}, {3.607439359899631*^9, 
   3.6074393720733633`*^9}, {3.607439407675263*^9, 3.607439411767206*^9}, {
   3.607439457672702*^9, 3.607439460731933*^9}, {3.6074394925097713`*^9, 
   3.607439493452446*^9}, {3.6074395332418213`*^9, 3.607439588832615*^9}, {
   3.607439663579957*^9, 3.607439663787908*^9}, {3.607439695139468*^9, 
   3.607439748318975*^9}, {3.607439800334342*^9, 3.6074398329149857`*^9}, {
   3.607441788339684*^9, 3.607441867120257*^9}, 3.607441916275796*^9, {
   3.607442282276639*^9, 3.607442396688651*^9}, {3.607442427188726*^9, 
   3.607442489884301*^9}, {3.6074425810958557`*^9, 3.607442734360955*^9}, {
   3.607443069749413*^9, 3.6074430832650557`*^9}, {3.607443113328753*^9, 
   3.607443146524486*^9}, {3.607443177739635*^9, 3.6074431862283688`*^9}, {
   3.607443221612537*^9, 3.607443224345407*^9}, {3.607443367121389*^9, 
   3.607443375362425*^9}, {3.607443497923586*^9, 3.607443500482003*^9}, {
   3.607443533106678*^9, 3.607443550016934*^9}, {3.607443618129724*^9, 
   3.607444028290679*^9}, {3.6074440765320263`*^9, 3.6074440987761307`*^9}, {
   3.607444145874483*^9, 3.607444234785017*^9}, {3.6074442791795263`*^9, 
   3.607444317579392*^9}, {3.607444351686377*^9, 3.607444360289259*^9}, {
   3.607444395807396*^9, 3.607444406578197*^9}, {3.607444472629367*^9, 
   3.6074445478590612`*^9}, {3.6074452564810534`*^9, 3.607445278389885*^9}, {
   3.607445310678071*^9, 3.607445320957287*^9}, {3.607445377688724*^9, 
   3.6074453953909492`*^9}, {3.607445798277032*^9, 3.6074458133435497`*^9}, {
   3.6074460673537416`*^9, 3.6074460930268497`*^9}, {3.607446515664777*^9, 
   3.607446542452594*^9}, {3.6074465735653257`*^9, 3.607446578561208*^9}, {
   3.607446612142765*^9, 3.607446633897317*^9}, {3.6074467754389133`*^9, 
   3.607446776346159*^9}, {3.607447084637806*^9, 3.607447146403747*^9}, {
   3.607447386253038*^9, 3.6074473932469893`*^9}, {3.6074474438066893`*^9, 
   3.607447445229149*^9}, {3.607447479744481*^9, 3.6074474865935793`*^9}, {
   3.60744801844167*^9, 3.607448052940515*^9}, {3.607448134678932*^9, 
   3.607448140445428*^9}, {3.60744825949625*^9, 3.607448307373407*^9}, {
   3.60744837271093*^9, 3.6074483750699053`*^9}, {3.607448718078692*^9, 
   3.607448719695283*^9}, {3.607450209200862*^9, 3.607450380092449*^9}, {
   3.607450422439165*^9, 3.607450492987011*^9}, {3.607450541870235*^9, 
   3.607450542283588*^9}, {3.6074505939558353`*^9, 3.607450618683353*^9}, {
   3.607450806038529*^9, 3.6074508174665203`*^9}, {3.6074508788698387`*^9, 
   3.607450884255336*^9}, {3.607450935956408*^9, 3.607450975500018*^9}, {
   3.6074510160803556`*^9, 3.607451045453888*^9}, {3.607451079149534*^9, 
   3.607451123324251*^9}, {3.6074511718150387`*^9, 3.607451220411026*^9}, {
   3.607451256963443*^9, 3.607451265881843*^9}, {3.6074513127244053`*^9, 
   3.6074513954804*^9}, {3.607451449177822*^9, 3.6074514905665617`*^9}, {
   3.60745152167675*^9, 3.607451588619465*^9}, {3.6074516219421988`*^9, 
   3.607451655146327*^9}, {3.60745170891123*^9, 3.607451735658683*^9}, {
   3.607451784673278*^9, 3.607451824369192*^9}, {3.6074518966736097`*^9, 
   3.6074521443309107`*^9}, {3.6074521832087717`*^9, 3.607452185491014*^9}, {
   3.607452336430632*^9, 3.607452462491701*^9}, {3.607452510004798*^9, 
   3.6074525632242403`*^9}, {3.6074526202101803`*^9, 3.607452643465856*^9}, {
   3.607452675610333*^9, 3.6074526785848207`*^9}, {3.607452741585157*^9, 
   3.6074527721514187`*^9}, {3.607453871442733*^9, 3.60745387443928*^9}, {
   3.607454927562376*^9, 3.6074551210650806`*^9}, {3.607455228913389*^9, 
   3.607455229322352*^9}, {3.607455459573797*^9, 3.6074554760613203`*^9}, {
   3.607455520262814*^9, 3.607455617161047*^9}, {3.6074556505111237`*^9, 
   3.607455677396699*^9}, {3.6074557978338003`*^9, 3.607455806864422*^9}, {
   3.6074558391799717`*^9, 3.60745587311904*^9}, {3.607456070164813*^9, 
   3.607456085528144*^9}, {3.607456317757475*^9, 3.607456319612214*^9}, {
   3.607456360241341*^9, 3.607456373206234*^9}, {3.607456437522457*^9, 
   3.607456462365089*^9}, {3.607456495110806*^9, 3.607456495277092*^9}, {
   3.607456604264735*^9, 3.607456607515126*^9}, {3.60745664319468*^9, 
   3.607456646600917*^9}, {3.6074567453288097`*^9, 3.607456752228554*^9}, {
   3.607470660919132*^9, 3.607470680678677*^9}, {3.6074707288754597`*^9, 
   3.6074707650300198`*^9}, {3.60747084400587*^9, 3.60747089302922*^9}, {
   3.6074710848543873`*^9, 3.607471163263435*^9}, {3.6074712370359297`*^9, 
   3.607471295596924*^9}, {3.607471328925665*^9, 3.607471334027154*^9}, {
   3.607471478373255*^9, 3.6074716046131783`*^9}, 3.607472690858809*^9, {
   3.607472805735787*^9, 3.607472810719343*^9}, {3.607472892166416*^9, 
   3.607472941533101*^9}, {3.6074730332183228`*^9, 3.607473124802247*^9}, {
   3.6074731590700417`*^9, 3.6074732171665583`*^9}, 3.6074733196378937`*^9, {
   3.6074733917134047`*^9, 3.607473394616831*^9}, {3.607473440287713*^9, 
   3.6074735226459227`*^9}, {3.607474071058049*^9, 3.6074741530656424`*^9}, {
   3.60747420384966*^9, 3.6074742369200573`*^9}, {3.607474314990129*^9, 
   3.607474432345607*^9}, {3.607474554706203*^9, 3.607474630646922*^9}, {
   3.607474709918502*^9, 3.607474778049727*^9}, {3.607475407021927*^9, 
   3.607475413056695*^9}, 3.607475451112975*^9, {3.607475649728848*^9, 
   3.607475661490906*^9}, {3.607475895391018*^9, 3.607475902240746*^9}, {
   3.6074770986208363`*^9, 3.607477126938519*^9}, {3.6074772226537037`*^9, 
   3.607477234786561*^9}, {3.607477292832872*^9, 3.6074773636473713`*^9}, {
   3.607477514647607*^9, 3.607477527340314*^9}, {3.6074776190007477`*^9, 
   3.607477663128838*^9}, {3.607477728860692*^9, 3.607477730416445*^9}, {
   3.607477804079402*^9, 3.607477834956382*^9}, {3.607477873655779*^9, 
   3.607477885151321*^9}, {3.607478373929929*^9, 3.607478389801612*^9}, {
   3.607479894882702*^9, 3.607479907977683*^9}, {3.607480918663446*^9, 
   3.6074810044978724`*^9}, {3.607481074252366*^9, 3.6074814235129137`*^9}, {
   3.607481461328579*^9, 3.607481552180656*^9}, {3.607481623283669*^9, 
   3.607481761335823*^9}, {3.60748186242698*^9, 3.607481871515375*^9}, {
   3.607483066984067*^9, 3.6074830722176113`*^9}, {3.6074831236004877`*^9, 
   3.607483127768421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", "[", 
   RowBox[{"\[Mu]_", "?", "PartitionQ"}], "]"}], ":=", 
  RowBox[{"X", "@", 
   RowBox[{"SmartTensor", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "\[Mu]", "]"}], ",", 
         RowBox[{"Length", "[", "\[Mu]", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "\[Mu]"}], "}"}]}], "]"}]}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607374702582893*^9, 3.607374713771036*^9}, {
   3.607374759619514*^9, 3.607374777364194*^9}, {3.6073759390795517`*^9, 
   3.607375940536324*^9}, 3.607439803300333*^9, {3.6074727319123173`*^9, 
   3.607472738827652*^9}, {3.607472779830304*^9, 3.60747278448064*^9}, {
   3.60747327219424*^9, 3.607473278263093*^9}, 3.6074741012832823`*^9, {
   3.607478167605694*^9, 3.607478277301187*^9}, {3.607478310927384*^9, 
   3.607478312363473*^9}, 3.607480133008174*^9, {3.607480235441049*^9, 
   3.6074802362846622`*^9}, {3.607480277342964*^9, 3.607480281109084*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NonCommutativeMultiply", "[", 
   RowBox[{
    RowBox[{"X", "[", "m1_", "]"}], ",", 
    RowBox[{"X", "[", "m2_", "]"}]}], "]"}], "^:=", 
  RowBox[{"X", "[", 
   RowBox[{"m1", ".", "m2"}], "]"}]}]], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.607328127236258*^9, 3.607328151401196*^9}, {
   3.6073285950411043`*^9, 3.607328674800432*^9}, {3.607328719303646*^9, 
   3.607328749583126*^9}, {3.607328945696485*^9, 3.6073289875526857`*^9}, {
   3.607361344457992*^9, 3.6073613483698397`*^9}, {3.607372105145063*^9, 
   3.607372135981942*^9}, 3.607439803302726*^9, 3.607474101284161*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["End Package", "Section",
 InitializationGroup->True,
 CellChangeTimes->{{3.598832077806426*^9, 3.5988320795733624`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationGroup->True,
 CellChangeTimes->{{3.5988320817506733`*^9, 3.598832085870481*^9}, {
  3.598833303614431*^9, 3.598833305148703*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Test", "Section",
 CellChangeTimes->{{3.607477927422762*^9, 3.60747792777607*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]", "=", 
   RowBox[{"box", "@@@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "2"}], "}"}]}], "}"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.60727947344171*^9, 3.607279493859569*^9}, {
   3.607279777038949*^9, 3.607279799106091*^9}, 3.6073218204084883`*^9, 
   3.6073269119820642`*^9, {3.607371288763892*^9, 3.607371289568561*^9}, {
   3.607371792943706*^9, 3.6073718104675083`*^9}, 3.6073746238430777`*^9, {
   3.607375174787195*^9, 3.607375189953912*^9}, {3.607375223538657*^9, 
   3.607375237984255*^9}, {3.607379566497155*^9, 3.607379574003087*^9}, 
   3.60743980329563*^9, 3.607442819592408*^9, {3.607444596707775*^9, 
   3.607444602346084*^9}, {3.607472755134069*^9, 3.607472758694837*^9}, 
   3.607474101280286*^9, {3.607478105462576*^9, 3.607478111452652*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"X", "[", "\[Mu]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6074564759689713`*^9, 3.607456476332822*^9}, 
   3.60747376847364*^9, 3.6074741012871723`*^9, {3.607474667109379*^9, 
   3.607474693048847*^9}, {3.607475940804503*^9, 3.6074759426672077`*^9}, 
   3.607477589311057*^9, {3.6074780963669987`*^9, 3.607478097655089*^9}, {
   3.60747828692385*^9, 3.607478287361479*^9}, 3.607482926692684*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   DynamicModuleBox[{FormalityTools`Graphics`Private`mat$$ = 
    FormalityTools`SmartTensor`SmartTensor[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 
     1}, {0, 0, 0, 1, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}}, {{
       FormalityTools`Graphics`box[0, 0, 0], 
       FormalityTools`Graphics`box[1, 0, 0], 
       FormalityTools`Graphics`box[0, 1, 0], 
       FormalityTools`Graphics`box[0, 0, 1], 
       FormalityTools`Graphics`box[0, 0, 2]}, {
       FormalityTools`Graphics`box[0, 0, 0], 
       FormalityTools`Graphics`box[1, 0, 0], 
       FormalityTools`Graphics`box[0, 1, 0], 
       FormalityTools`Graphics`box[0, 0, 1], 
       FormalityTools`Graphics`box[0, 0, 2]}}], 
    FormalityTools`Graphics`Private`fancyGraphics$$ = True}, 
    InterpretationBox[
     PanelBox[
      TagBox[GridBox[{
         {
          TagBox[
           DynamicModuleBox[{Typeset`var$$ = True}, 
            InterpretationBox[
             StyleBox[
              PaneSelectorBox[{False->GridBox[{
                 {
                  OpenerBox[Dynamic[Typeset`var$$],
                   Appearance->Automatic,
                   AutoAction->False,
                   ContinuousAction->False,
                   Enabled->Automatic], "\<\"Graphics\"\>"}
                },
                AutoDelete->False,
                BaselinePosition->{1, 1},
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{Automatic}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
               True->GridBox[{
                 {
                  OpenerBox[Dynamic[Typeset`var$$],
                   Appearance->Automatic,
                   AutoAction->False,
                   ContinuousAction->False,
                   Enabled->Automatic], "\<\"Graphics\"\>"},
                 {"", 
                  PaneBox[
                   TagBox[GridBox[{
                    {
                    DynamicBox[ToBoxes[
                    Graphics3D[
                    Join[
                    Table[
                    
                    With[{FormalityTools`Graphics`Private`b$ = 
                    ReplaceAll[FormalityTools`Graphics`Private`a, 
                    FormalityTools`Graphics`box -> List]}, 
                    EventHandler[
                    Annotation[
                    If[FormalityTools`Graphics`Private`fancyGraphics$$, 
                    Apply[Mouseover, 
                    Map[{
                    Opacity[#], 
                    EdgeForm[Gray], 
                    FormalityTools`Graphics`Private`boxColor$1152[
                    FormalityTools`Graphics`Private`a], 
                    Cuboid[FormalityTools`Graphics`Private`b$]}& , {
                    FormalityTools`Graphics`Private`op$1152, 0.5}]], {
                    EdgeForm[Gray], Transparent, 
                    Cuboid[FormalityTools`Graphics`Private`b$]}], 
                    FormalityTools`Graphics`Private`a, "Mouse"], {
                    "MouseDown" :> (FormalityTools`Graphics`Private`down$1152 = 
                    MouseAnnotation[]), "MouseUp" :> (If[
                    And[
                    MouseAnnotation[] =!= Null, 
                    FormalityTools`Graphics`Private`down$1152 =!= Null], 
                    FormalityTools`Graphics`Private`mat$$ = 
                    Apply[ReplacePart[
                    FormalityTools`Graphics`Private`mat$$, {1, 
                    SlotSequence[1]} :> 
                    Boole[Part[FormalityTools`Graphics`Private`mat$$, 1, 
                    SlotSequence[1]] == 0]]& , 
                    Position[
                    CircleTimes[
                    MouseAnnotation[], 
                    FormalityTools`Graphics`Private`down$1152], 
                    FormalityTools`Graphics`Private`mat$$]]; Null]; 
                    FormalityTools`Graphics`Private`down$1152 = Null; 
                    Null)}]], {
                    FormalityTools`Graphics`Private`a, 
                    FormalityTools`Graphics`Private`\[Mu]$1152}], 
                    ReplaceAll[
                    Join[
                    If[
                    And[
                    FormalityTools`Graphics`Private`down$1152 =!= Null, 
                    MouseAnnotation[] =!= Null], {{
                    Arrowheads[0.1], Thick, Black, 
                    Arrow[
                    ReplaceAll[{FormalityTools`Graphics`Private`down$1152, 
                    MouseAnnotation[]}, FormalityTools`Graphics`box -> List] + 
                    0.5]}}, {}], 
                    Apply[{
                    Arrowheads[0.1], Thick, Black, 
                    Tooltip[
                    If[
                    Apply[SameQ, #2], 
                    BezierCurve[
                    Map[
                    
                    Function[{FormalityTools`Graphics`Private`x}, First[#2] + 
                    FormalityTools`Graphics`Private`x], {{0, 0, 0}, {
                    0, 0.5, 0}, {0.5, 0, 0}, {0, 0, 0}}]], 
                    Arrow[#2]], #]}& , 
                    ReplaceAll[
                    Select[
                    FormalityTools`SmartTensor`Pair[
                    FormalityTools`Graphics`Private`mat$$], First[#] != 0& ], 
                    CircleTimes[
                    FormalityTools`Graphics`box[
                    Pattern[FormalityTools`Graphics`Private`h, 
                    BlankSequence[]]], 
                    FormalityTools`Graphics`box[
                    Pattern[FormalityTools`Graphics`Private`r, 
                    BlankSequence[]]]] :> {{
                    FormalityTools`Graphics`Private`r} + 
                    0.5, {FormalityTools`Graphics`Private`h} + 0.5}], {1}]], 
                    If[
                    FormalityTools`Graphics`Private`fancyGraphics$$, {
                    Black -> Yellow, Arrow -> (Arrow[
                    Tube[#, 0.03]]& ), BezierCurve :> 
                    Composition[Tube, BezierCurve]}, {}]]], 
                    ViewPoint -> {1, 0.6, 0.7}, Boxed -> False, 
                    PreserveImageOptions -> True, ImageSize -> Small], 
                    StandardForm],
                    ImageSizeCache->{270., {154., 164.}}]},
                    {
                    TemplateBox[{"\"Fancy graphics: \"",CheckboxBox[
                    Dynamic[FormalityTools`Graphics`Private`fancyGraphics$$]]},
                    "Row",
                    DisplayFunction->(RowBox[{#, "\[InvisibleSpace]", #2}]& ),
                    
                    InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}
                    },
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                   ImageMargins->0]}
                },
                AutoDelete->False,
                BaselinePosition->{1, 1},
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{Automatic}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
               Dynamic[Typeset`var$$],
               Alignment->Automatic,
               BaselinePosition->Baseline,
               DefaultBaseStyle->"OpenerView",
               ImageMargins->0,
               ImageSize->Automatic],
              Deployed->False,
              StripOnInput->False],
             OpenerView[{"Graphics", 
               Column[{
                 Dynamic[
                  Graphics3D[
                   Join[
                    Table[
                    
                    With[{FormalityTools`Graphics`Private`b$ = 
                    ReplaceAll[
                    FormalityTools`Graphics`Private`a, 
                    FormalityTools`Graphics`box -> List]}, 
                    EventHandler[
                    Annotation[
                    If[FormalityTools`Graphics`Private`fancyGraphics$$, 
                    Apply[Mouseover, 
                    Map[{
                    Opacity[#], 
                    EdgeForm[Gray], 
                    FormalityTools`Graphics`Private`boxColor$1152[
                    FormalityTools`Graphics`Private`a], 
                    Cuboid[FormalityTools`Graphics`Private`b$]}& , {
                    FormalityTools`Graphics`Private`op$1152, 0.5}]], {
                    EdgeForm[Gray], Transparent, 
                    Cuboid[FormalityTools`Graphics`Private`b$]}], 
                    FormalityTools`Graphics`Private`a, "Mouse"], {
                    "MouseDown" :> (FormalityTools`Graphics`Private`down$1152 = 
                    MouseAnnotation[]), "MouseUp" :> (If[
                    And[
                    MouseAnnotation[] =!= Null, 
                    FormalityTools`Graphics`Private`down$1152 =!= Null], 
                    FormalityTools`Graphics`Private`mat$$ = 
                    Apply[ReplacePart[
                    FormalityTools`Graphics`Private`mat$$, {1, 
                    SlotSequence[1]} :> 
                    Boole[Part[FormalityTools`Graphics`Private`mat$$, 1, 
                    SlotSequence[1]] == 0]]& , 
                    Position[
                    CircleTimes[
                    MouseAnnotation[], 
                    FormalityTools`Graphics`Private`down$1152], 
                    FormalityTools`Graphics`Private`mat$$]]; Null]; 
                    FormalityTools`Graphics`Private`down$1152 = Null; 
                    Null)}]], {
                    FormalityTools`Graphics`Private`a, 
                    FormalityTools`Graphics`Private`\[Mu]$1152}], 
                    ReplaceAll[
                    Join[
                    If[
                    And[
                    FormalityTools`Graphics`Private`down$1152 =!= Null, 
                    MouseAnnotation[] =!= Null], {{
                    Arrowheads[0.1], Thick, Black, 
                    Arrow[
                    ReplaceAll[{FormalityTools`Graphics`Private`down$1152, 
                    MouseAnnotation[]}, FormalityTools`Graphics`box -> List] + 
                    0.5]}}, {}], 
                    Apply[{
                    Arrowheads[0.1], Thick, Black, 
                    Tooltip[
                    If[
                    Apply[SameQ, #2], 
                    BezierCurve[
                    Map[
                    
                    Function[{FormalityTools`Graphics`Private`x}, First[#2] + 
                    FormalityTools`Graphics`Private`x], {{0, 0, 0}, {
                    0, 0.5, 0}, {0.5, 0, 0}, {0, 0, 0}}]], 
                    Arrow[#2]], #]}& , 
                    ReplaceAll[
                    Select[
                    FormalityTools`SmartTensor`Pair[
                    FormalityTools`Graphics`Private`mat$$], First[#] != 0& ], 
                    CircleTimes[
                    FormalityTools`Graphics`box[
                    Pattern[FormalityTools`Graphics`Private`h, 
                    BlankSequence[]]], 
                    FormalityTools`Graphics`box[
                    Pattern[FormalityTools`Graphics`Private`r, 
                    BlankSequence[]]]] :> {{
                    FormalityTools`Graphics`Private`r} + 
                    0.5, {FormalityTools`Graphics`Private`h} + 0.5}], {1}]], 
                    If[
                    FormalityTools`Graphics`Private`fancyGraphics$$, {
                    Black -> Yellow, Arrow -> (Arrow[
                    Tube[#, 0.03]]& ), BezierCurve :> 
                    Composition[Tube, BezierCurve]}, {}]]], 
                   ViewPoint -> {1, 0.6, 0.7}, Boxed -> False, 
                   PreserveImageOptions -> True, ImageSize -> Small]], 
                 Row[{"Fancy graphics: ", 
                   Checkbox[
                    Dynamic[
                    FormalityTools`Graphics`Private`fancyGraphics$$]]}]}]}, 
              True]],
            DynamicModuleValues:>{}],
           Setting[#, {0}]& ]},
         {
          TagBox[
           DynamicModuleBox[{Typeset`var$$ = True}, 
            InterpretationBox[
             StyleBox[
              PaneSelectorBox[{False->GridBox[{
                 {
                  OpenerBox[Dynamic[Typeset`var$$],
                   Appearance->Automatic,
                   AutoAction->False,
                   ContinuousAction->False,
                   Enabled->Automatic], "\<\"Data\"\>"}
                },
                AutoDelete->False,
                BaselinePosition->{1, 1},
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{Automatic}}},
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
               True->GridBox[{
                 {
                  OpenerBox[Dynamic[Typeset`var$$],
                   Appearance->Automatic,
                   AutoAction->False,
                   ContinuousAction->False,
                   Enabled->Automatic], "\<\"Data\"\>"},
                 {"", 
                  PaneBox[
                   InputFieldBox[Dynamic[
                    TableForm[
                    FormalityTools`SmartTensor`Forget[
                    FormalityTools`Graphics`Private`mat$$], 
                    (TableHeadings -> {#, #}& )[
                    Map[Graphics[{
                    Opacity[
                    If[
                    Dynamic[MouseAnnotation[] =!= #], 
                    FormalityTools`Graphics`Private`op$1152, 1]], 
                    EdgeForm[Transparent], 
                    FormalityTools`Graphics`Private`boxColor$1152[#], 
                    Rectangle[]}, ImageSize -> 12]& , 
                    FormalityTools`Graphics`Private`\[Mu]$1152]]], If[
                    MatrixQ[#, NumberQ], 
                    Part[FormalityTools`Graphics`Private`mat$$, 1] = #]& ],
                    ContinuousAction->True],
                   ImageMargins->0]}
                },
                AutoDelete->False,
                BaselinePosition->{1, 1},
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{Automatic}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
               Dynamic[Typeset`var$$],
               Alignment->Automatic,
               BaselinePosition->Baseline,
               DefaultBaseStyle->"OpenerView",
               ImageMargins->0,
               ImageSize->Automatic],
              Deployed->False,
              StripOnInput->False],
             OpenerView[{"Data", 
               InputField[
                Dynamic[
                 TableForm[
                  FormalityTools`SmartTensor`Forget[
                  FormalityTools`Graphics`Private`mat$$], 
                  (TableHeadings -> {#, #}& )[
                   Map[Graphics[{
                    Opacity[
                    If[
                    Dynamic[MouseAnnotation[] =!= #], 
                    FormalityTools`Graphics`Private`op$1152, 1]], 
                    EdgeForm[Transparent], 
                    FormalityTools`Graphics`Private`boxColor$1152[#], 
                    Rectangle[]}, ImageSize -> 12]& , 
                    FormalityTools`Graphics`Private`\[Mu]$1152]]], If[
                  MatrixQ[#, NumberQ], 
                  Part[FormalityTools`Graphics`Private`mat$$, 1] = #]& ], 
                ContinuousAction -> True]}, False]],
            DynamicModuleValues:>{}],
           Setting[#, {0}]& ]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Column"]],
     FormalityTools`Graphics`X[FormalityTools`Graphics`Private`mat$$]],
    DynamicModuleValues:>{}],
   Setting[#, {0}]& ], "**", 
  TagBox[
   DynamicModuleBox[{FormalityTools`Graphics`Private`mat$$ = 
    FormalityTools`SmartTensor`SmartTensor[{{0, 0, 0, 0, 0}, {0, 0, 0, 0, 
     1}, {0, 0, 0, 1, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}}, {{
       FormalityTools`Graphics`box[0, 0, 0], 
       FormalityTools`Graphics`box[1, 0, 0], 
       FormalityTools`Graphics`box[0, 1, 0], 
       FormalityTools`Graphics`box[0, 0, 1], 
       FormalityTools`Graphics`box[0, 0, 2]}, {
       FormalityTools`Graphics`box[0, 0, 0], 
       FormalityTools`Graphics`box[1, 0, 0], 
       FormalityTools`Graphics`box[0, 1, 0], 
       FormalityTools`Graphics`box[0, 0, 1], 
       FormalityTools`Graphics`box[0, 0, 2]}}], 
    FormalityTools`Graphics`Private`fancyGraphics$$ = True}, 
    InterpretationBox[
     PanelBox[
      TagBox[GridBox[{
         {
          TagBox[
           DynamicModuleBox[{Typeset`var$$ = True}, 
            InterpretationBox[
             StyleBox[
              PaneSelectorBox[{False->GridBox[{
                 {
                  OpenerBox[Dynamic[Typeset`var$$],
                   Appearance->Automatic,
                   AutoAction->False,
                   ContinuousAction->False,
                   Enabled->Automatic], "\<\"Graphics\"\>"}
                },
                AutoDelete->False,
                BaselinePosition->{1, 1},
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{Automatic}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
               True->GridBox[{
                 {
                  OpenerBox[Dynamic[Typeset`var$$],
                   Appearance->Automatic,
                   AutoAction->False,
                   ContinuousAction->False,
                   Enabled->Automatic], "\<\"Graphics\"\>"},
                 {"", 
                  PaneBox[
                   TagBox[GridBox[{
                    {
                    DynamicBox[ToBoxes[
                    Graphics3D[
                    Join[
                    Table[
                    
                    With[{FormalityTools`Graphics`Private`b$ = 
                    ReplaceAll[FormalityTools`Graphics`Private`a, 
                    FormalityTools`Graphics`box -> List]}, 
                    EventHandler[
                    Annotation[
                    If[FormalityTools`Graphics`Private`fancyGraphics$$, 
                    Apply[Mouseover, 
                    Map[{
                    Opacity[#], 
                    EdgeForm[Gray], 
                    FormalityTools`Graphics`Private`boxColor$1152[
                    FormalityTools`Graphics`Private`a], 
                    Cuboid[FormalityTools`Graphics`Private`b$]}& , {
                    FormalityTools`Graphics`Private`op$1152, 0.5}]], {
                    EdgeForm[Gray], Transparent, 
                    Cuboid[FormalityTools`Graphics`Private`b$]}], 
                    FormalityTools`Graphics`Private`a, "Mouse"], {
                    "MouseDown" :> (FormalityTools`Graphics`Private`down$1152 = 
                    MouseAnnotation[]), "MouseUp" :> (If[
                    And[
                    MouseAnnotation[] =!= Null, 
                    FormalityTools`Graphics`Private`down$1152 =!= Null], 
                    FormalityTools`Graphics`Private`mat$$ = 
                    Apply[ReplacePart[
                    FormalityTools`Graphics`Private`mat$$, {1, 
                    SlotSequence[1]} :> 
                    Boole[Part[FormalityTools`Graphics`Private`mat$$, 1, 
                    SlotSequence[1]] == 0]]& , 
                    Position[
                    CircleTimes[
                    MouseAnnotation[], 
                    FormalityTools`Graphics`Private`down$1152], 
                    FormalityTools`Graphics`Private`mat$$]]; Null]; 
                    FormalityTools`Graphics`Private`down$1152 = Null; 
                    Null)}]], {
                    FormalityTools`Graphics`Private`a, 
                    FormalityTools`Graphics`Private`\[Mu]$1152}], 
                    ReplaceAll[
                    Join[
                    If[
                    And[
                    FormalityTools`Graphics`Private`down$1152 =!= Null, 
                    MouseAnnotation[] =!= Null], {{
                    Arrowheads[0.1], Thick, Black, 
                    Arrow[
                    ReplaceAll[{FormalityTools`Graphics`Private`down$1152, 
                    MouseAnnotation[]}, FormalityTools`Graphics`box -> List] + 
                    0.5]}}, {}], 
                    Apply[{
                    Arrowheads[0.1], Thick, Black, 
                    Tooltip[
                    If[
                    Apply[SameQ, #2], 
                    BezierCurve[
                    Map[
                    
                    Function[{FormalityTools`Graphics`Private`x}, First[#2] + 
                    FormalityTools`Graphics`Private`x], {{0, 0, 0}, {
                    0, 0.5, 0}, {0.5, 0, 0}, {0, 0, 0}}]], 
                    Arrow[#2]], #]}& , 
                    ReplaceAll[
                    Select[
                    FormalityTools`SmartTensor`Pair[
                    FormalityTools`Graphics`Private`mat$$], First[#] != 0& ], 
                    CircleTimes[
                    FormalityTools`Graphics`box[
                    Pattern[FormalityTools`Graphics`Private`h, 
                    BlankSequence[]]], 
                    FormalityTools`Graphics`box[
                    Pattern[FormalityTools`Graphics`Private`r, 
                    BlankSequence[]]]] :> {{
                    FormalityTools`Graphics`Private`r} + 
                    0.5, {FormalityTools`Graphics`Private`h} + 0.5}], {1}]], 
                    If[
                    FormalityTools`Graphics`Private`fancyGraphics$$, {
                    Black -> Yellow, Arrow -> (Arrow[
                    Tube[#, 0.03]]& ), BezierCurve :> 
                    Composition[Tube, BezierCurve]}, {}]]], 
                    ViewPoint -> {1, 0.6, 0.7}, Boxed -> False, 
                    PreserveImageOptions -> True, ImageSize -> Small], 
                    StandardForm],
                    ImageSizeCache->{270., {154., 164.}}]},
                    {
                    TemplateBox[{"\"Fancy graphics: \"",CheckboxBox[
                    Dynamic[FormalityTools`Graphics`Private`fancyGraphics$$]]},
                    "Row",
                    DisplayFunction->(RowBox[{#, "\[InvisibleSpace]", #2}]& ),
                    
                    InterpretationFunction->(RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}
                    },
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                   ImageMargins->0]}
                },
                AutoDelete->False,
                BaselinePosition->{1, 1},
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{Automatic}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
               Dynamic[Typeset`var$$],
               Alignment->Automatic,
               BaselinePosition->Baseline,
               DefaultBaseStyle->"OpenerView",
               ImageMargins->0,
               ImageSize->Automatic],
              Deployed->False,
              StripOnInput->False],
             OpenerView[{"Graphics", 
               Column[{
                 Dynamic[
                  Graphics3D[
                   Join[
                    Table[
                    
                    With[{FormalityTools`Graphics`Private`b$ = 
                    ReplaceAll[
                    FormalityTools`Graphics`Private`a, 
                    FormalityTools`Graphics`box -> List]}, 
                    EventHandler[
                    Annotation[
                    If[FormalityTools`Graphics`Private`fancyGraphics$$, 
                    Apply[Mouseover, 
                    Map[{
                    Opacity[#], 
                    EdgeForm[Gray], 
                    FormalityTools`Graphics`Private`boxColor$1152[
                    FormalityTools`Graphics`Private`a], 
                    Cuboid[FormalityTools`Graphics`Private`b$]}& , {
                    FormalityTools`Graphics`Private`op$1152, 0.5}]], {
                    EdgeForm[Gray], Transparent, 
                    Cuboid[FormalityTools`Graphics`Private`b$]}], 
                    FormalityTools`Graphics`Private`a, "Mouse"], {
                    "MouseDown" :> (FormalityTools`Graphics`Private`down$1152 = 
                    MouseAnnotation[]), "MouseUp" :> (If[
                    And[
                    MouseAnnotation[] =!= Null, 
                    FormalityTools`Graphics`Private`down$1152 =!= Null], 
                    FormalityTools`Graphics`Private`mat$$ = 
                    Apply[ReplacePart[
                    FormalityTools`Graphics`Private`mat$$, {1, 
                    SlotSequence[1]} :> 
                    Boole[Part[FormalityTools`Graphics`Private`mat$$, 1, 
                    SlotSequence[1]] == 0]]& , 
                    Position[
                    CircleTimes[
                    MouseAnnotation[], 
                    FormalityTools`Graphics`Private`down$1152], 
                    FormalityTools`Graphics`Private`mat$$]]; Null]; 
                    FormalityTools`Graphics`Private`down$1152 = Null; 
                    Null)}]], {
                    FormalityTools`Graphics`Private`a, 
                    FormalityTools`Graphics`Private`\[Mu]$1152}], 
                    ReplaceAll[
                    Join[
                    If[
                    And[
                    FormalityTools`Graphics`Private`down$1152 =!= Null, 
                    MouseAnnotation[] =!= Null], {{
                    Arrowheads[0.1], Thick, Black, 
                    Arrow[
                    ReplaceAll[{FormalityTools`Graphics`Private`down$1152, 
                    MouseAnnotation[]}, FormalityTools`Graphics`box -> List] + 
                    0.5]}}, {}], 
                    Apply[{
                    Arrowheads[0.1], Thick, Black, 
                    Tooltip[
                    If[
                    Apply[SameQ, #2], 
                    BezierCurve[
                    Map[
                    
                    Function[{FormalityTools`Graphics`Private`x}, First[#2] + 
                    FormalityTools`Graphics`Private`x], {{0, 0, 0}, {
                    0, 0.5, 0}, {0.5, 0, 0}, {0, 0, 0}}]], 
                    Arrow[#2]], #]}& , 
                    ReplaceAll[
                    Select[
                    FormalityTools`SmartTensor`Pair[
                    FormalityTools`Graphics`Private`mat$$], First[#] != 0& ], 
                    CircleTimes[
                    FormalityTools`Graphics`box[
                    Pattern[FormalityTools`Graphics`Private`h, 
                    BlankSequence[]]], 
                    FormalityTools`Graphics`box[
                    Pattern[FormalityTools`Graphics`Private`r, 
                    BlankSequence[]]]] :> {{
                    FormalityTools`Graphics`Private`r} + 
                    0.5, {FormalityTools`Graphics`Private`h} + 0.5}], {1}]], 
                    If[
                    FormalityTools`Graphics`Private`fancyGraphics$$, {
                    Black -> Yellow, Arrow -> (Arrow[
                    Tube[#, 0.03]]& ), BezierCurve :> 
                    Composition[Tube, BezierCurve]}, {}]]], 
                   ViewPoint -> {1, 0.6, 0.7}, Boxed -> False, 
                   PreserveImageOptions -> True, ImageSize -> Small]], 
                 Row[{"Fancy graphics: ", 
                   Checkbox[
                    Dynamic[
                    FormalityTools`Graphics`Private`fancyGraphics$$]]}]}]}, 
              True]],
            DynamicModuleValues:>{}],
           Setting[#, {0}]& ]},
         {
          TagBox[
           DynamicModuleBox[{Typeset`var$$ = True}, 
            InterpretationBox[
             StyleBox[
              PaneSelectorBox[{False->GridBox[{
                 {
                  OpenerBox[Dynamic[Typeset`var$$],
                   Appearance->Automatic,
                   AutoAction->False,
                   ContinuousAction->False,
                   Enabled->Automatic], "\<\"Data\"\>"}
                },
                AutoDelete->False,
                BaselinePosition->{1, 1},
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{Automatic}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
               True->GridBox[{
                 {
                  OpenerBox[Dynamic[Typeset`var$$],
                   Appearance->Automatic,
                   AutoAction->False,
                   ContinuousAction->False,
                   Enabled->Automatic], "\<\"Data\"\>"},
                 {"", 
                  PaneBox[
                   InputFieldBox[Dynamic[
                    TableForm[
                    FormalityTools`SmartTensor`Forget[
                    FormalityTools`Graphics`Private`mat$$], 
                    (TableHeadings -> {#, #}& )[
                    Map[Graphics[{
                    Opacity[
                    If[
                    Dynamic[MouseAnnotation[] =!= #], 
                    FormalityTools`Graphics`Private`op$1152, 1]], 
                    EdgeForm[Transparent], 
                    FormalityTools`Graphics`Private`boxColor$1152[#], 
                    Rectangle[]}, ImageSize -> 12]& , 
                    FormalityTools`Graphics`Private`\[Mu]$1152]]], If[
                    MatrixQ[#, NumberQ], 
                    Part[FormalityTools`Graphics`Private`mat$$, 1] = #]& ],
                    ContinuousAction->True],
                   ImageMargins->0]}
                },
                AutoDelete->False,
                BaselinePosition->{1, 1},
                GridBoxAlignment->{"Columns" -> {{Left}}},
                GridBoxBackground->{"Columns" -> {{Automatic}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
               Dynamic[Typeset`var$$],
               Alignment->Automatic,
               BaselinePosition->Baseline,
               DefaultBaseStyle->"OpenerView",
               ImageMargins->0,
               ImageSize->Automatic],
              Deployed->False,
              StripOnInput->False],
             OpenerView[{"Data", 
               InputField[
                Dynamic[
                 TableForm[
                  FormalityTools`SmartTensor`Forget[
                  FormalityTools`Graphics`Private`mat$$], 
                  (TableHeadings -> {#, #}& )[
                   Map[Graphics[{
                    Opacity[
                    If[
                    Dynamic[MouseAnnotation[] =!= #], 
                    FormalityTools`Graphics`Private`op$1152, 1]], 
                    EdgeForm[Transparent], 
                    FormalityTools`Graphics`Private`boxColor$1152[#], 
                    Rectangle[]}, ImageSize -> 12]& , 
                    FormalityTools`Graphics`Private`\[Mu]$1152]]], If[
                  MatrixQ[#, NumberQ], 
                  Part[FormalityTools`Graphics`Private`mat$$, 1] = #]& ], 
                ContinuousAction -> True]}, False]],
            DynamicModuleValues:>{}],
           Setting[#, {0}]& ]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Column"]],
     FormalityTools`Graphics`X[FormalityTools`Graphics`Private`mat$$]],
    DynamicModuleValues:>{}],
   Setting[#, {0}]& ]}]], "Input",
 CellChangeTimes->{{3.6104671095110826`*^9, 3.610467110700055*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Throw", "::", "\<\"nocatch\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Uncaught \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Throw[\\\"Basis \
error\\\"]\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" \
returned to top level.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Throw/nocatch\\\", ButtonNote -> \
\\\"Throw::nocatch\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.610467112603044*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"Throw", "[", "\<\"Basis error\"\>", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.610467112643394*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partition", "Subsection",
 CellChangeTimes->{{3.6074803640519047`*^9, 3.6074803679794273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"PartitionQ", "[", 
    RowBox[{"{", "}"}], "]"}], ",", 
   RowBox[{"PartitionQ", "[", "\[Mu]", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.607480681164405*^9, 3.607480725620013*^9}, {
  3.607480765585086*^9, 3.607480827243541*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.6074816302024193`*^9, 3.607481642955385*^9}, {
   3.607481679645368*^9, 3.607481708660063*^9}, 3.607481762669758*^9, 
   3.607481891563961*^9, 3.607482631392905*^9, 3.607482961381089*^9, {
   3.607483069279365*^9, 3.607483096359943*^9}, 3.607483129336211*^9, 
   3.607700916006649*^9, 3.607700962238418*^9, 3.607716822549953*^9, 
   3.61046684325734*^9, {3.6104670852332077`*^9, 3.6104670996005096`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"PartitionQ", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"box", "[", "]"}], "}"}], "}"}], "]"}], ",", 
   RowBox[{"PartitionQ", "[", "3", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.607480831053596*^9, 3.607480834132181*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.607481630268627*^9, 3.6074816433581057`*^9}, {
   3.607481679726227*^9, 3.607481708723439*^9}, 3.6074817627507353`*^9, 
   3.607481892063291*^9, 3.6074826314769382`*^9, 3.607482961731324*^9, {
   3.607483069362136*^9, 3.607483096441586*^9}, 3.607483129412361*^9, 
   3.607700916216296*^9, 3.607700962321519*^9, 3.607716822601408*^9, 
   3.610466843335765*^9, {3.610467085426146*^9, 3.610467099666581*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1362, 724},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
Background->RGBColor[0.88, 1, 0.88],
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 98, 1, 114, "Title"],
Cell[CellGroupData[{
Cell[545, 20, 90, 1, 100, "Section"],
Cell[638, 23, 459, 10, 80, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1134, 38, 126, 2, 53, "Section",
 InitializationGroup->True],
Cell[1263, 42, 665, 12, 56, "Input",
 InitializationGroup->True],
Cell[1931, 56, 765, 20, 126, "Input",
 InitializationGroup->True],
Cell[2699, 78, 212, 5, 56, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[2948, 88, 119, 2, 53, "Section",
 InitializationGroup->True],
Cell[CellGroupData[{
Cell[3092, 94, 97, 1, 51, "Subsection"],
Cell[3192, 97, 1187, 28, 66, "Input",
 InitializationGroup->True],
Cell[4382, 127, 367, 10, 42, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4786, 142, 89, 1, 51, "Subsection"],
Cell[4878, 145, 27509, 493, 2183, "Input",
 InitializationGroup->True],
Cell[32390, 640, 1087, 23, 42, "Input",
 InitializationGroup->True],
Cell[33480, 665, 632, 13, 42, "Input",
 InitializationGroup->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[34161, 684, 126, 2, 53, "Section",
 InitializationGroup->True],
Cell[34290, 688, 293, 7, 80, "Input",
 InitializationGroup->True]
}, Closed]],
Cell[CellGroupData[{
Cell[34620, 700, 88, 1, 53, "Section"],
Cell[34711, 703, 1157, 25, 40, "Input"],
Cell[35871, 730, 454, 7, 64, "Input"],
Cell[CellGroupData[{
Cell[36350, 741, 32965, 719, 618, "Input"],
Cell[69318, 1462, 605, 11, 32, "Message"],
Cell[69926, 1475, 150, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70113, 1483, 101, 1, 51, "Subsection"],
Cell[CellGroupData[{
Cell[70239, 1488, 287, 7, 40, "Input"],
Cell[70529, 1497, 506, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71072, 1510, 294, 8, 40, "Input"],
Cell[71369, 1520, 509, 8, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

